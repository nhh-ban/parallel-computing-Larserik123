library(tidyverse)
setwd("C:/Users/larse/OneDrive/Skrivebord/Rprogramming/Assignments/Assignment 8/parallel-computing-Larserik123")
library(tictoc)
# Function to source a script and measure its execution time
time_script <- function(script_path) {
tic(paste("Timing", script_path))
source(script_path)
toc()
}
# Define the paths to the scripts
script_paths <- c(
"scripts/script1.r",
"scripts/script2.r",
"scripts/script3.r"
)
# Run and time each script
lapply(script_paths, time_script)
library(tweedie)
library(ggplot2)
simTweedieTest <-
function(N){
t.test(
rtweedie(N, mu=10000, phi=100, power=1.9),
mu=10000
)$p.value
}
# Assignment 2:
MTweedieTests <-
function(N,M,sig){
# Using parallel computing within the MTweedieTests function
library(parallel)
num_cores <- detectCores() - 1  # saving one core for the OS
cl <- makeCluster(num_cores)
results <- parLapply(cl, 1:M, function(x) simTweedieTest(N) < sig)
stopCluster(cl)
sum(unlist(results))/M
}
library(tictoc)
# Function to source a script and measure its execution time
time_script <- function(script_path) {
tic(paste("Timing", script_path))
source(script_path)
toc()
}
# Define the paths to the scripts
script_paths <- c(
"scripts/script1.r",
"scripts/script2.r",
"scripts/script3.r"
)
# Run and time each script
lapply(script_paths, time_script)
